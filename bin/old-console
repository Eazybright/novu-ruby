#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"
require "novu"
require "uuid"

# You can add fixtures and/or initialization code here to make experimenting
# with your gem easier. You can also use a different console, if you like.

# (If you use this, don't forget to add pry to your Gemfile!)
# require "pry"
# Pry.start, enable_retry: true, retry_config: {max_retries: 5}
# uuid = UUID.new , idempotency_key: '67475db0-50b1-013c-fae9-38e85644422a'
# puts uuid.generate
client = Novu::Client.new(access_token: '001e88ba1e9deb77878350ff4e3dabdd', enable_retry: false, retry_config: {max_retries: 5})

# payload = {
#   'eventsw' => [
#       {
#           'name' => 'Trigger1',
#           'payload' => { # optional
#               'first-name' => 'Adam' # optional
#           },
#           'to' => {
#               'subscriberId' => '7789'
#           },
#           'transactionId' => '89kjfke9893' #optional
#       },
#       {
#           'name' => 'Trigger2',
#           'payload' => { # optional
#               'last-name' => 'Eve' # optional
#           },
#           'to' => {
#               'subscriberId' => '7789'
#           },
#           'transactionId' => 'sw900999as' #optional
#       }
#   ]
# }
# result = client.trigger_bulk_event(payload)
result = client.rename_topic('topic_new@wsedfrtghkk', 'you')
# payload = {
#     'changeIds' => ['64a865672712f97fb0985298']
# }
# result = client.create_subscriber({
#   'subscriberId' => 'dempotentcyYou'
# })

# result = client.apply_bulk_changes({
#   'subscribers' => ['you']
# })
# result = client.subscriber_topic('topic_new', 'you')
# result = client.provider_oauth_redirect('youhfhfh', 'slack', {
#   'environmentId' => '64a865672712f97fb0985298',
#   'code' => '123',
#   'hmacHash' => '$2y$10$U.lIU/phf4.0sO8XPoHcwehP5n66H87pFQ527xSTOibQ0tAVlwpTm',
#   'integrationIdentifier' => 'integration'
# })

puts result

require "irb"
IRB.start(__FILE__)
